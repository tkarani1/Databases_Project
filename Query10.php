<head><title></title></head>
<body>

<?php
include 'open.php';

//Override the PHP configuration file to display all errors
//This is useful during development but generally disabled before release
ini_set('error_reporting', E_ALL);
ini_set('display_errors', true);

//Collect the posted value in a variable called $item

echo "<h2>GDP vs. Percent of top songs with 'money' in each year for each country</h2>";
//Determine if any input was actually collected
if ($stmt = $conn->prepare(
"WITH 
TopSongsPerCountry AS (SELECT country, songID, YEAR(startDate) as year 
                        FROM SpotifyChart), 
NumSongsPerCountry AS (SELECT COUNT(DISTINCT songID) as num_songs, country, year
                        FROM TopSongsPerCountry
                        GROUP BY country, year),
SongsWithMoney AS (SELECT Song.songID, country 
                    FROM Song JOIN TopSongsPerCountry ON Song.songID = TopSongsPerCountry.songID
                    WHERE LOWER(lyrics) LIKE '% love %'),
MoneySongsPerCountry AS (
                        SELECT SongsWithMoney.country, COUNT(DISTINCT songID) as num_money_songs, num_songs, year
                        FROM SongsWithMoney JOIN NumSongsPerCountry ON SongsWithMoney.country = NumSongsPerCountry.country
                        GROUP BY country, year)
SELECT M.country, GDP, M.year, ROUND(100 * num_money_songs / num_songs) AS PercentAboutMoney
                    FROM MoneySongsPerCountry as M JOIN CountryHappiness as C
                    ON M.country = C.country and M.year = C.year;")) {
       //Attach the ? in prepared statements to variables (even if those variables
       //don't hold the values we want yet).  First parameter is a list of types of
       //the variables that follow: 's' means string, 'i' means integer, 'd' means
       //double. E.g., for a statment with 3 ?'s, where middle parameter is an integer
       //and the other two are strings, the first argument included should be "sis".

       //Run the actual query
       if ($stmt->execute()) {

        //Store result set generated by the prepared statement
        $result = $stmt->get_result();

        if (($result) && ($result->num_rows != 0)) {

           //Create table to display results
           echo "<table border=\"1px solid black\">";
           echo "<tr><th> Country </th> <th> GDP </th> <th> Year </th> <th> Percent of Top Songs About Money </th></tr>";
             foreach($result as $row){

             // reset the attribute names array
             $flist = $result->fetch_fields();
                 echo "<tr>";
                 foreach($flist as $fname){
                     echo "<td>".$row[$fname->name]."</td>";
             }
                 echo "</tr>";
             }

           echo "</table>";

        }      else {
        //if ($result->num_rows == 0) {
           //Result contains no rows at all
           echo "Insufficient information to determine top songs with 'money' in lyrics";

            }

        //We are done with the result set returned above, so free it
        $result->free_result();

     } else {

        //Call to execute failed, e.g. because server is no longer reachable,
        //or because supplied values are of the wrong type
        echo "Execute failed.<br>";
     }

     //Close down the prepared statement
     $stmt->close();

  } else {

      //A problem occurred when preparing the statement; check for syntax errors
      //and misspelled attribute names in the statement string.
     echo "Prepare failed.<br>";
     $error = $conn->errno . ' ' . $conn->error;
     echo $error;
  }


//Close the connection created in open.php
$conn->close();
?>
</body>
